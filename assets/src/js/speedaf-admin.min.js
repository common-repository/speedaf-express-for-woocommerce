import * as $ from "jquery";
import * as remodal from './remodal.js';
import * as jConfirm from "./confirm.min.js";
import {spfloading} from "./loading.min.js";

var sdfOrder = {
    sdfOrderData : {},
    load:null,
    editModal:null,
    init: function() {
        //checkbox
        this.sdfOrderData = window.sdfOrderData;
        this.initCheckBox();
        this.checkbox();
        this.bindEvt();

    },
    bindEvt: function() {
        var self =this;
        //print label
        $(document).on('click','[data-remodal-action=confirm]',self.printLabel.bind(self));
        //create order
        $(document).on('click','#create-order-botton',self.createOrder.bind(self));

        $(document).on('click','#export-order-botton',self.printOrder.bind(self));
        $(document).on('click','#submit-edit-sender-form',self.editSender.bind(self));
        //print row label
        $(document).on('click','.print-label-row',self.printRowLabel.bind(this));
      
        $(document).on('click','#edit_sender_popup',function(){
          self.editModal = $('[data-remodal-id=edit-sender-modal]').remodal();
          self.editModal.open();
        });
    },
    printRowLabel:function(e){
        var billID = $(e.target).attr('data-stack-id');

        if(billID === '') return false;
        var sdfOrderData = window.sdfOrderData;
        var params = {
            labelType: 1,
            billID:billID
        };
        this.ajaxRequest(this.sdfOrderData.printLabel,params);
    },
    checkbox: function() {
        $('#checked-spf').on('click',function(){
            var checked_status =$(this).is(':checked');
            $('.tab-content-wrapper tbody .el-checkbox input[type="checkbox"]').each(function(index,el) {
                $(el).get(0).checked = checked_status;
            });

            });
    },
    initCheckBox: function() {
        try {
            $('.tab-content-wrapper .el-checkbox tbody input[type="checkbox"]').each(function(index,el) {
                if(!$(el).is(':checked')) throw new Error('check all checked');
            });
        } catch (error) {
            return;
        }

        $("#checked-spf").get(0).checked = true;
        
    },

    editSender: function(e) {
        e.preventDefault();
        e.stopPropagation();
        var targetObj = $(e.target),self= this,postData ={};
    var params =  $("#edit-form").serializeArray();
    
    try {
        $.each(params,function(index,el) {
        switch(el.name) {
            case 'woocommerce_store_address':
            case 'woocommerce_store_city':
            case 'woocommerce_default_country':
            case '"woocommerce_store_postcode"':
            case '"spf_speedaf_name"':
            case "spf_speedaf_phone":
                if(el.value.length === 0) {
                
                throw new Error(self.sdfOrderData.please_enter+$("[name="+el.name+"]").prev().text());
            }
            break;
        }
        postData[el.name] = el.value;

        })
    } catch (error) {
        self.error(error);
        return;
    }
    
        this.ajaxRequest(this.sdfOrderData.editSender,postData,'');
    },
    

    getBoxId: function() {
        var ids = [];
        $('.tab-content-wrapper tbody input[type="checkbox"]').each(function(index,el) {
                if($(el).is(':checked')) {
                    ids.push($(el).val());
                }
                
        });

        return ids;
    },

    createOrder: function(e) {
       
    
    
        var option = {
            title:'Tips' ,
            btn: parseInt("0011",2),
            cancelBtn: this.sdfOrderData.cancelBtn,
            okBtn: this.sdfOrderData.okBtn,
            onOk: function(){
                var ids = this.getBoxId();
                var formData = $("#order-body-form").serializeArray();
                if(ids.length === 0)
                {
                        
                        this.error(this.sdfOrderData.select_ids);
                        return;
                }

                var params = {
                    ids: formData
                } 
                // $('#create-order-botton').attr('disabled','disabled');
                this.load = new spfloading({loading: self.sdfOrderData.loading,modalContainer:"create-order-loading" });
                this.load.open();
                this.ajaxRequest(this.sdfOrderData.createOrder,params,$('#create-order-botton'));
            }.bind(this)
        }
        
        $.confirm("<div style='font-size:1.5rem;color:red;'>"+this.sdfOrderData.createMsg+"</div>", "confirm", option);
            
    },

    ajaxRequest: function(type,params,target) {
        var self = this;
        var defaultParams = {
            action: this.sdfOrderData.action,
            _ajax_nonce: this.sdfOrderData.nonce
        };
        Object.assign(params,defaultParams);

        $.post(this.sdfOrderData.ajax_url+'?type='+type,params,function(res){
   
            if(typeof target  === 'object') target.removeAttr('disabled');
            if(res.success) {
           
                switch(type) {
                    case self.sdfOrderData.createOrder:
                       self.load.setHtml(res.data.confirm_html);
                
                        $('#order_html_content').html(res.data.order_html);
                        self.initCheckBox();
                        
                        break;
                    case self.sdfOrderData.printLabel:
                        if(res.data.label_url.length > 0)
                                window.open(res.data.label_url+ '?response-content-type=application/pdf');
                        break;
                    case self.sdfOrderData.editSender:
                        $('#edit_sender_popup').attr('disabled','disabled');
                        if(self.editModal) {
                            self.editModal.close();
                            self.editModal.destroy();
                        
                        }
                      $('.remodal-wrapper').css('display','none');
                        self.error(self.sdfOrderData.edit_note,'success');
                        break;
                    case self.sdfOrderData.printOrder:
                        var iframe = document.createElement('iframe');
                        iframe.style="display: none;";
                        document.body.appendChild(iframe);
                        var iframeDoc = iframe.contentDocument || iframe.contentWindow.document;
                        iframeDoc.open();
                        iframeDoc.write(res.data.print_html);
                        iframeDoc.close();
                        iframe.contentWindow.print();
                        iframe.contentWindow.addEventListener('afterprint',self.destroyIframe);


                        //print_iframe.contentWindow.open();
                       
                       break;

                }
            }else {
                console.log(self.log);
                if(self.load  ) self.load.close();
                self.error(res.msg);
            }
           
            
        })
    },

    error:function(content,typeEnum) {
        if(typeof typeEnum === 'undefined') var typeEnum = 'error';
        $.confirm(content, typeEnum);
    },



    printLabel: function(e) {
        var checkedInput = $('#print-label-type').find('input[type="radio"]:checked');
        if(checkedInput.length === 0) return false;
        var sdfOrderData = window.sdfOrderData;
        var params = {
            action: sdfOrderData.action,
            _ajax_nonce: sdfOrderData.nonce,
            labelType:checkedInput.val(),
            ids: this.getBoxId()
        };
        this.ajaxRequest(this.sdfOrderData.printLabel,params);
    },
   
    printOrder: function() {
        var params = {
            action: self.sdfOrderData.printOrder,
            ids: this.getBoxId()
        }
        this.destroyIframe();
        this.ajaxRequest(this.sdfOrderData.printOrder,params);
    },

    destroyIframe: function(){
        try{
            var iframe = document.querySelectorAll('iframe');
            for(var i=0;i<iframe.length;i++) {
                iframe[i].parentNode.removeChild(iframe[i]);
            }

        }catch(e) {
            console.log(e);
        }
    }


}


export {
    sdfOrder
}
